% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rad.R
\name{rad}
\alias{rad}
\title{Rank abundance distribution curve}
\usage{
rad(x, remove.zeros = TRUE, fit.rad = FALSE, fit.distrib = FALSE,
  fit.N = nrow(x), sample.index = NA, plot = TRUE, header = "")
}
\arguments{
\item{x}{community matrix with species as rows, samples as columns and non-negative integers as entries}

\item{remove.zeros}{if true, zeros in the species abundance distribution curve are discarded}

\item{fit.rad}{(optional) fit different RAD models using vegan's radfit function. If selected, fit.distrib is ignored and if plot is true, vegan's plot function for RAD curves is used.}

\item{fit.distrib}{(optional) select the best-fitting distribution for the RAD by comparing normal, lognormal, gamma, negative binomial and Poisson distribution using MASS function fitdistr}

\item{fit.N}{(optional) number of samples drawn from the distribution to be fitted (defaults to the number of species in x after filtering of zeros)}

\item{sample.index}{(optional) the sample index for which species abundance distribution, if not provided, the mean across samples is taken}

\item{plot}{plot the RAD curve}

\item{header}{add the header to the title of the plot}
}
\value{
the RAD is returned, if fit.rad or fit.distrib is true, the results of distribution fitting are also returned (distrib, score [log-likelihood for fit.distrib and AIC for fit.rad], params and fitted.rad)
}
\description{
Given a community abundance matrix, compute the species abundance distribution as rank abundance curve.
}
\details{
Please provide species abundances as counts (scale and round if necessary). Note that for fit.rad, Null is the broken stick distribution.
}
\examples{
ts.ricker=ricker(10,generateA(10),K=rep(0.01,10))
ts.ricker=round(ts.ricker*1000) # scale to integers
rad.out.ricker=rad.fit.ricker=rad(ts.ricker, fit.distrib = TRUE, header="Ricker model")
ts.hubbell=simHubbell(N = 100, M = 100, I = 500, d = 1, tskip=500, tend=1500)
rad.out.hubbell=rad.fit.hubbell=rad(ts.hubbell, fit.distrib = TRUE, header="neutral model")
}
